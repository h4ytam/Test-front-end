{"version":3,"sources":["api/index.js","components/BlogList.js","actions/posts.js","components/Blog.js","App.js","reportWebVitals.js","reducers/index.js","reducers/posts.js","index.js"],"names":["url","updatePost","id","updatedPost","axios","patch","deletePost","delete","BlogList","post","useState","show","setShow","dispatch","useDispatch","title","updatePostData","setupdatePostData","handleClose","e","preventDefault","a","api","data","type","payload","console","log","Modal","onHide","Header","closeButton","Title","Body","className","InputGroup","FormControl","name","aria-describedby","onChange","target","value","placeholder","body","as","aria-label","Footer","Button","variant","onClick","Card","style","width","height","backgroundColor","fontSize","Text","marginRight","Blog","searchValue","setSearchValue","onchangeHandler","liveSearch","toLowerCase","indexOf","posts","useSelector","state","postData","setPostData","newPost","clear","length","Container","display","gridTemplateColumns","gridTemplateRows","gap","gridTemplateAreas","filter","map","App","useEffect","get","slicedData","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b40d1033.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id, updatedPost) =>\r\n  axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updatePost, deletePost } from \"../actions/posts\";\r\n\r\nimport { InputGroup, FormControl, Card, Button, Modal } from \"react-bootstrap\";\r\nexport const BlogList = ({ post }) => {\r\n  const [show, setShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleShow = () => setShow(true);\r\n  const [updatePostData, setupdatePostData] = useState({\r\n    title: post.title,\r\n  });\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    setShow(false);\r\n    dispatch(updatePost(post.id, updatePostData));\r\n    // clear();\r\n    // alert(post.title);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update a Post:</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"AddArticle\">\r\n            <form>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  name=\"title\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={(e) =>\r\n                    setupdatePostData({\r\n                      ...updatePostData,\r\n                      title: e.target.value,\r\n                    })\r\n                  }\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                  value={updatePostData.title}\r\n                />\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <FormControl\r\n                  name=\"body\"\r\n                  placeholder=\"body\"\r\n                  value={post.body}\r\n                  as=\"textarea\"\r\n                  aria-label=\"With textarea\"\r\n                />\r\n              </InputGroup>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Card\r\n        style={{\r\n          width: \"18rem\",\r\n          height: \"21rem\",\r\n          backgroundColor: \"#eaffea\",\r\n        }}\r\n        key={post.id}\r\n      >\r\n        <Card.Body>\r\n          <Card.Title style={{ fontSize: \"20px\", height: \"90px\" }}>\r\n            {post.title ? updatePostData.title : post.title}\r\n          </Card.Title>\r\n          <Card.Text style={{ fontSize: \"15px\", height: \"153px\" }}>\r\n            {post.body}\r\n          </Card.Text>\r\n          <Button\r\n            style={{ marginRight: \"15px\" }}\r\n            variant=\"warning\"\r\n            onClick={handleShow}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => dispatch(deletePost(post.id))}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import * as api from \"../api\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    const slicedData = data.slice(0, 16);\r\n    // console.log(slicedData);\r\n    dispatch({ type: \"FETCH_ALL\", payload: slicedData });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({ type: \"CREATE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: \"UPDATE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: \"DELETE\", payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { createPost } from \"../actions/posts\";\r\n\r\nimport { BlogList } from \"./BlogList\";\r\n\r\nexport const Blog = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Modal handling\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => setShow(true);\r\n  //\r\n  // Live search\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const onchangeHandler = async (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const liveSearch = ({ title }) => {\r\n    // console.log(name);\r\n    return title.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\r\n  };\r\n  //\r\n\r\n  // Redux consuming Data\r\n  const posts = useSelector((state) => state.posts);\r\n  // console.log(posts);\r\n  //\r\n\r\n  const [postData, setPostData] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n  });\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    setShow(false);\r\n    dispatch(createPost(postData));\r\n    clear();\r\n    // console.log(postData);\r\n  };\r\n  const clear = () => {\r\n    setPostData({\r\n      title: \"\",\r\n      body: \"\",\r\n    });\r\n  };\r\n  return !posts.length ? (\r\n    <p>Loading...</p>\r\n  ) : (\r\n    <Container>\r\n      <h1>My Blog</h1>\r\n      {/* Adding new post Modal */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Adding new Post:</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"AddArticle\">\r\n            <form>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  name=\"title\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={(e) =>\r\n                    setPostData({ ...postData, title: e.target.value })\r\n                  }\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                  value={postData.title}\r\n                />\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <FormControl\r\n                  name=\"body\"\r\n                  onChange={(e) =>\r\n                    setPostData({ ...postData, body: e.target.value })\r\n                  }\r\n                  placeholder=\"body\"\r\n                  value={postData.body}\r\n                  as=\"textarea\"\r\n                  aria-label=\"With textarea\"\r\n                />\r\n              </InputGroup>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Type in order to search\"\r\n          aria-describedby=\"basic-addon2\"\r\n          value={searchValue}\r\n          onChange={onchangeHandler}\r\n        />\r\n        <Button variant=\"success\" onClick={handleShow}>\r\n          New Post\r\n        </Button>\r\n      </InputGroup>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\r\n          gridTemplateRows: \"1fr 1fr 1fr\",\r\n          gap: \"15px\",\r\n          gridTemplateAreas: \" '. . . . ' '. . . . ' '. . . . ' \",\r\n        }}\r\n      >\r\n        {!posts.filter(liveSearch).length && (\r\n          <h4>There's no post by that Title !!</h4>\r\n        )}\r\n        {posts.filter(liveSearch).map((post) => (\r\n          <BlogList post={post} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Blog } from \"./components/Blog\";\nimport { getPosts } from \"./actions/posts\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  });\n\n  return (\n    <div className=\"App\">\n      <Blog />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport posts from \"./posts\";\r\nexport default combineReducers({\r\n  posts,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.payload;\r\n    case \"CREATE\":\r\n      return [...posts, action.payload];\r\n    case \"UPDATE\":\r\n    case \"DELETE\":\r\n      return posts.filter((post) => post.id !== action.payload);\r\n\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}